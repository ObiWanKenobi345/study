@using NewsPaper.Views.Manage
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@{
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}

<ul class="nav nav-pills nav-stacked">
    <li class="@ManageNavPages.IndexNavClass(ViewContext)"><a asp-action="Index">Profile</a></li>
    <li class="@ManageNavPages.ChangePasswordNavClass(ViewContext)"><a asp-action="ChangePassword">Password</a></li>
    @if (hasExternalLogins)
    {
        <li class="@ManageNavPages.ExternalLoginsNavClass(ViewContext)"><a asp-action="ExternalLogins">External logins</a></li>
    }
    <li class="@ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)"><a asp-action="TwoFactorAuthentication">Two-factor authentication</a></li>
    @{
        var userRole = (await UserManager.GetRolesAsync(await UserManager.GetUserAsync(User))).FirstOrDefault();
    }
    @if (userRole == "admin" || userRole == "writer")
    {
        <li><a asp-controller="News" asp-action="GetUserNews"
            asp-route-userId="@UserManager.GetUserId(User)">Опубликованные Новости</a></li>
    }
</ul>

